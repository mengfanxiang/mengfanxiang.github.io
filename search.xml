<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>isis</title>
      <link href="/2024/05/15/isis/"/>
      <url>/2024/05/15/isis/</url>
      
        <content type="html"><![CDATA[<h1 id="中间系统到中间系统（IS-IS）"><a href="#中间系统到中间系统（IS-IS）" class="headerlink" title="中间系统到中间系统（IS-IS）"></a>中间系统到中间系统（IS-IS）</h1><h3 id="什么是is-is"><a href="#什么是is-is" class="headerlink" title="什么是is-is?"></a>什么是is-is?</h3><p>中间系统到中间系统IS-IS（Intermediate System to Intermediate System），是一种内部网关协议（IGP），用于自治系统内部。</p><p><em>IS-IS最初是国际化标准组织ISO为它的无连接网络协议CLNP设计的一种动态路由协议。后来IETF对IS-IS进行了扩充和修改，使其能够支持IP网络，修订后的IS-IS协议被称为集成化的IS-IS，如无明确说明，本课程IS-IS特指修订后的集成化IS-IS。</em></p><h3 id="is-is协议特性？"><a href="#is-is协议特性？" class="headerlink" title="is-is协议特性？"></a>is-is协议特性？</h3><ul><li>和OSPF一样，IS-IS也是一种<strong>链路状态协议</strong>，维护一个<strong>链路状态数据库LSDB</strong>，使用<strong>最短路径优先算法</strong>（SPF算法）进行路由计算。</li><li>由于IS-IS的简便性及扩展性强的特点，目前在大型ISP的网络中被广泛地部署。</li></ul><p><em>SPF算法，即最短路径优先算法（Shortest Path First），也被称为Dijkstra算法，是由荷兰计算机科学家狄克斯特拉于1959年提出的。</em></p><h3 id="is-is报文类型？"><a href="#is-is报文类型？" class="headerlink" title="is-is报文类型？"></a>is-is报文类型？</h3><p>IS-IS路由协议使用三大类报文：<strong>Hello报文</strong>、<strong>LSP报文</strong>和<strong>SNP报文</strong>，共计9种具体的报文。</p><ol><li>Hello报文：用于建立和维护邻居关系，也称IIH（IS-TO-IS Hello PDUs）<ul><li>广播型网络中使用LAN IIH，Level-1邻居使用Level-1 LAN IIH， Level-2邻居使用Level-2 LAN IIH</li><li>点对点网络使用P2P IIH<br> <em>LAN IIH与P2P IIH在格式上有所不同</em></li></ul></li><li>LSP报文：链路状态报文LSP（Link State PDUs）, 用于交换链路状态信息（相当于OSPF中的LSA），类似于OSPF中的LSU报文。<ul><li>Level-1 LSP：由Level-1 路由器和Level-1-2 路由器传递。</li><li>Level-2 LSP：由Level-2 路由器和Level-1-2 路由器传递。</li></ul></li><li>SNP报文：序列号报文SNP（Sequence Number PDUs），描述全部或部分数据库中的LSP来同步各LSDB, 维护各路由器LSDB的完整与同步。分为全序列号报文CSNP和部分序列号报文PSNP。<ul><li><strong>CSNP</strong>：包含LSDB中所有LSP的摘要信息，用于保持邻居间LSDB的同步，类似于OSPF中的DD报文。分为Level-1 CSNP和Level-2 CSNP，分别用于Level-1邻居和Level-2 邻居的LSDB同步。</li><li><strong>PSNP</strong>：包含部分LSP的摘要信息，用于请求邻居发送所需要的LSP或对收到的LSP进行确认，相当于OSPF中的LSR和LSACK。分为Level-1 PSNP和Level-2 PSNP，分别用于Level-1邻居和Level-2 邻居的LSDB同步。</li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>策略路由（路由重定向）</title>
      <link href="/2024/05/15/%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1%EF%BC%88%E8%B7%AF%E7%94%B1%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%89/"/>
      <url>/2024/05/15/%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1%EF%BC%88%E8%B7%AF%E7%94%B1%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="策略路由（路由重定向）"><a href="#策略路由（路由重定向）" class="headerlink" title="策略路由（路由重定向）"></a>策略路由（路由重定向）</h1><h3 id="什么是策略路由？"><a href="#什么是策略路由？" class="headerlink" title="什么是策略路由？"></a>什么是策略路由？</h3><p>策略路由PBR（Policy-Based Routing）是一种依据用户制定的策略进行路由选择的机制。</p><h3 id="策略路由的特性？"><a href="#策略路由的特性？" class="headerlink" title="策略路由的特性？"></a>策略路由的特性？</h3><ul><li>策略路由是<strong>流策略</strong>的一种，有时也称路由重定向</li><li>策略路由的优先级高于路由表，被策略路由匹配的报文将按照</li><li>策略规定的下一跳转发，而不再查找路由表</li><li>策略路由通常搭配ACL使用，匹配元素丰富，可将源目的IP、端口号、报文长度、协议类型等作为匹配报文的条件。</li><li>策略路由可增强路由选择的灵活性与可控性，满足用户的特殊需求</li></ul><h3 id="路由策略与策略路由的区别？"><a href="#路由策略与策略路由的区别？" class="headerlink" title="路由策略与策略路由的区别？"></a>路由策略与策略路由的区别？</h3><table><thead><tr><th>路由策略</th><th>策略路由</th></tr></thead><tbody><tr><td>基于控制平面，会影响路由表表项</td><td>基于转发平面，不会影响路由表表项，且设备收到报文后，会先查找策略路由进行匹配转发，若匹配失败，则再查找路由表进行转发</td></tr><tr><td>只能基于目的地址进行策略制定</td><td>可基于源地址、目的地址、协议类型、报文大小等进行策略制定</td></tr><tr><td>与路由协议结合使用</td><td>需手工逐跳配置，以保证报文按策略进行转发</td></tr><tr><td>常用工具：Route-Policy、Filter-Policy等</td><td>常用工具：Traffic-Filter、Traffic-Policy、Policy-Based-Route等</td></tr></tbody></table><p><em>路由策略和策略路由是两种不同的概念，在学习时要特别注意</em></p><h3 id="策略路由的分类？"><a href="#策略路由的分类？" class="headerlink" title="策略路由的分类？"></a>策略路由的分类？</h3><ul><li>本地策略路由，仅对<strong>本机下发的报文</strong>进行处理，对转发的报文不起作用</li><li>接口策略路由，只对<strong>转发的报文</strong>（接口收到的）起作用，对本地下发的报文（比如本地的Ping报文）不起作用</li><li>智能策略路由，基于业务需求的策略路由，通过匹配链路质量和网络业务对链路质量的需求，实现智能选路</li></ul><h3 id="接口策略路由配置步骤？"><a href="#接口策略路由配置步骤？" class="headerlink" title="接口策略路由配置步骤？"></a>接口策略路由配置步骤？</h3><ol><li>配置各接口IP地址，配置AR1的静态路由（配置省略）</li><li>在AR1配置策略路由<ul><li>创建ACL，匹配所需流量</li><li>创建流分类，调用ACL</li><li>创建流行为，指定下一跳（重定向）</li><li>创建流策略，绑定流分类和流行为</li><li>应用流策略</li></ul></li><li>验证配置结果</li></ol><h3 id="策略路由的配置？"><a href="#策略路由的配置？" class="headerlink" title="策略路由的配置？"></a>策略路由的配置？</h3><p><em>如图所示，配置策略路由，实现PC1访问100.0.0.1走AR1→AR3方向，其他PC访问100.0.0.1走AR1→AR2方向</em></p><p><img src="/image.png" alt="alt text"></p><pre><code>[AR1]acl 3000                    //创建ACL，匹配所需的流量[AR1-acl-adv-3000] rule 5 permit ip source 192.168.1.1 0 destination 100.0.0.1 0 [AR1]traffic classifier PC1      //创建流分类，名称为PC1，并调用ACL[AR1-classifier-PC1] if-match acl 3000[AR1]traffic behavior PC1        //创建流行为，名称为PC1，指定下一跳[AR1-behavior-PC1] redirect ip-nexthop 192.168.13.2[AR1]traffic policy PC1          //创建流策略，名称为PC1，将流分类与流行为进行绑定[AR1-trafficpolicy-PC1] classifier PC1 behavior PC1[AR1]interface GigabitEthernet 0/0/0[AR1]traffic-policy PC1 inbound   //在接口入方向应用流策略</code></pre><p><em>验证：用PC1、PC2长ping100.0.0.1，对AR1的GE0&#x2F;0&#x2F;1和0&#x2F;0&#x2F;2分别抓包查看流量走向</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/10/hello-world/"/>
      <url>/2024/05/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
